name: Run Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5433:5432
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # volumes:
        #   - ./init-db:/docker-entrypoint-initdb.d
    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Initialize test schema
        run: |
          PGPASSWORD=testpass psql -h localhost -p 5433 -U testuser -d testdb -f ./init-db/init-test-db.sql


      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5433 -U testuser -d testdb; do
            echo "Waiting for DB..."
            sleep 1
          done
          echo "PostgreSQL is accepting connections."

          until psql -h localhost -p 5433 -U testuser -d testdb -c "SELECT * FROM conversations LIMIT 1;" > /dev/null 2>&1; do
          echo "Waiting for tables to be created..."
          sleep 1
          done
          echo "Tables are ready."

      - name: Run Jest tests
        env:
          NODE_ENV: test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          NODE_OPTIONS: --experimental-vm-modules
        run: npm test
